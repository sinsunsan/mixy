/*
  Require sass 3.2 version the latest to do this
  http://css-tricks.com/media-queries-sass-3-2-and-codekit/
  Common breakpoints 
  1280
  1024
  710
  480
  
  $xl = 1280px;
  $l = 1024px;
  $m = 710px;
  $m = 480px;
  
  @todo replace fixed units by variable that are setable on a project by project basis
*/
$xl: 1200px;
$l: 1024px;   
$m: 768px;
$s: 480px;
$xs: 320px;

$mob: 'mmax';
$iphone: 's'; // 320 portait 480 landscape 
$iphoneL: 'xs'; // Iphone portrait 320
$ipadP: 'm'; // 768 ipad portrait 
// exactly 768 could be adresses with min-width: 768 max-width: 1023
$ipadL: 'l'; //1024 ipad landscape

@mixin break($point) {
  
  @if $point == xl {
    // 1025 to 1200
    @media (min-width: $l + 1px) and (max-width: $xl) { @content; }
  }
  @if $point == l {
    // 769 to 1024
    @media (min-width: $m + 1px) and (max-width: $l) { @content; }
  }
   // 481 to 768
  @if $point == m {
    @media (min-width: $s + 1px) and (max-width: $m) { @content; }
  }
  // As we have a mobile first approach. 
  // This break point should normally not be used. 
  // As it's the default
  // It's a special breakpoints as it is the first, so it's similar to smax
  // @todo make the iphone portait xs
  // 480 and below
  @if $point == s {
    @media (max-width: $s) { @content; }
  }
  
  // Smaller than
  @if $point == xlmax {
    @media (max-width: $xl) { @content; }
  }
  @if $point == lmax {
    @media (max-width: $l) { @content; }
  }
  @if $point == mmax {
    @media (max-width: $m) { @content; }    
  }
  @if $point == smax {
    @media (max-width: $s) { @content; }    
  }
  
  // Greater than
  @if $point == xlmin {
    @media (min-width: $xl) { @content; }
  }
  @if $point == lmin {
    @media (min-width: $l) { @content; }
  }
  @if $point == mmin {
    @media (min-width: $m) { @content; }
  }
  @if $point == smin {
    @media (min-width: $s) { @content; }    
  }
}