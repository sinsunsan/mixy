//  Require sass 3.2 version the latest to do this
// http://css-tricks.com/media-queries-sass-3-2-and-codekit/

$xl: 1200px;
$l: 1024px;
$m: 768px;
$s: 480px;
$xs: 320px;

$nomob: 'mmin'; // All exept mobile
$mob: 'mmax';
$iphone: 's'; // 320 portait 480 landscape
// iphone 4 320px x 480px
// iphone 5 320px x 568px
// iphone 6 375 x 667 px
// samsun galaxy s3 360 x 640
// samsung galaxy S4 360px x 640px
// So with 360px we have nearly alls
// 480px is the next mobile resolution

$iphoneL: 'xs'; // Iphone portrait 320
$ipadP: 'm'; // 768 ipad portrait
// exactly 768 could be adresses with min-width: 768 max-width: 1023
$ipadL: 'l'; //1024 ipad landscape

@mixin bs-query($point) {

  // This point is not twbs but it lack often it correspond to mobile portrait
  @if ($point == 'xxs') {
     @media (max-width: 481px) { @content; }
  }
  // Twitter bootstrap
  // xs / Extra small devices / Phones < 768px
  // sm / Small  / Tablets >= 768px
  // md / Medium  / Desktops >= 992px
  // lg / Large / Desktops >= 1200px
  @if ($point == 'xs') {
    @media (max-width: 767px) { @content; }
  }
  @if ($point == 'sm') {
    @media (min-width: 768px) { @content; }
  }
  @if ($point == 'smm') {
    @media (max-width: 991px) { @content; }
  }
  // Small size max width
  @if ($point == 'smo') {
    @media (min-width: 768px) and (max-width: 991px){ @content; }
  }
  @if ($point == 'md') {
    @media (min-width: 992px) { @content; }
  }
  // Medium size max width
  @if ($point == 'mdm') {
    @media (max-width: 1199px) { @content; }
  }
  @if ($point == 'mdo') {
    @media (min-width: 992px) and (max-width: 1199px){ @content; }
  }
  // We keep ld for legacy but the offical twitter boostrap is lg
  @if ($point == 'ld' or $point == 'lg') {
    @media (min-width: 1200px) { @content; }
  }
  @else {
    //@debug "no valid named breakpoint has been found";
  }
}

// Mixin with custom value
@mixin bp-min($value) {
   @media (min-width: $value) { @content; }
}
// Mixin with custom value
@mixin bp-max($value) {
   @media (max-width: $value) { @content; }
}
// Mixi
// $min minimum range
// $max maxium range
@mixin bp-range($min, $max) {
  @media (min-width: $min + 1px) and (max-width: $max) { @content; }
}

@mixin break($point) {

  @if $point == xl {
    // 1025 to 1200
    @media (min-width: $l + 1px) and (max-width: $xl) { @content; }
  }
  @if $point == l {
    // 769 to 1024
    @media (min-width: $m + 1px) and (max-width: $l) { @content; }
  }
   // 481 to 768
  @if $point == m {
    @media (min-width: $s + 1px) and (max-width: $m) { @content; }
  }
  // As we have a mobile first approach.
  // This break point should normally not be used.
  // As it's the default
  // It's a special breakpoints as it is the first, so it's similar to smax
  // @todo make the iphone portait xs
  // 480 and below
  @if $point == s {
    @media (max-width: $s) { @content; }
  }

  // Smaller than
  @if $point == xlmax {
    @media (max-width: $xl) { @content; }
  }
  @if $point == lmax {
    @media (max-width: $l) { @content; }
  }
  @if $point == mmax {
    @media (max-width: $m) { @content; }
  }
  @if $point == smax {
    @media (max-width: $s) { @content; }
  }

  // Greater than
  @if $point == xlmin {
    @media (min-width: $xl) { @content; }
  }
  // At least 1024
  @if $point == lmin {
    @media (min-width: $l) { @content; }
  }
  @if $point == mmin {
    @media (min-width: $m) { @content; }
  }
  @if $point == smin {
    @media (min-width: $s) { @content; }
  }
}

// Twitter bootstrap has the class img-responsive
// that give a max-width: 100%
// But this don't allow lower res images to be scaled up
// Even if their resolution is lower
@if ($mixy-print-css) {
  .img-scale-width {
    width: 100%;
  }
}
@mixin responsive-image {
  width: 100%;
}